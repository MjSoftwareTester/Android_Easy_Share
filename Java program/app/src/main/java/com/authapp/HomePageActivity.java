package com.authapp;import androidx.appcompat.app.ActionBarDrawerToggle;import androidx.appcompat.app.AppCompatActivity;import androidx.drawerlayout.widget.DrawerLayout;import android.annotation.SuppressLint;import android.app.ProgressDialog;import android.content.Context;import android.content.Intent;import android.os.AsyncTask;import android.os.Bundle;import android.os.Handler;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import com.authapp.API.APICall;import com.authapp.API.APIResource;import com.authapp.POJO.AllUser;import com.authapp.POJO.User;import java.util.ArrayList;public class HomePageActivity extends AppCompatActivity implements View.OnClickListener {    private DrawerLayout drawerLayout;    boolean doubleBackToExitPressedOnce = false;    Boolean mSlideState = false;    private ImageView imgMenu;    private ImageView imgAdd;    private ListView listRequests;    private ArrayList<User> AllRequests;    private ListAdapter adapter;    private ArrayList<User> resultList;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_home_page);        drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);        imgMenu = (ImageView) findViewById(R.id.imgMenu);        imgAdd = findViewById(R.id.imgAdd);        imgAdd.setOnClickListener(this);        resultList = new ArrayList<User>();        listRequests = (ListView) findViewById(R.id.listCity);        AllRequests = new ArrayList<User>();        adapter = new ListAdapter();        listRequests.setAdapter(adapter);        listener();        //    new GetDocumentList().execute();    }    private void listener() {        drawerLayout.addDrawerListener(new ActionBarDrawerToggle(HomePageActivity.this, drawerLayout, 0, 0) {            @Override            public void onDrawerClosed(View drawerView) {                super.onDrawerClosed(drawerView);                mSlideState = false;            }            @Override            public void onDrawerOpened(View drawerView) {                super.onDrawerOpened(drawerView);                mSlideState = true;            }        });        imgMenu.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                openCloseDrawerMenu();            }        });    }    @SuppressLint("WrongConstant")    public void openCloseDrawerMenu() {        if (mSlideState) {            drawerLayout.closeDrawer(Gravity.START);        } else {            drawerLayout.openDrawer(Gravity.START);        }    }    @Override    public void onBackPressed() {        if (doubleBackToExitPressedOnce) {            super.onBackPressed();            return;        }        this.doubleBackToExitPressedOnce = true;        Toast.makeText(this, "Press back button again to exit", Toast.LENGTH_SHORT).show();        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                doubleBackToExitPressedOnce = false;            }        }, 2000);    }    @Override    public void onClick(View v) {        if (v == imgAdd) {            Intent intent = new Intent(HomePageActivity.this, DocumentAddActivity.class);            startActivity(intent);        }    }    @Override    protected void onResume() {        super.onResume();        new GetDocumentList().execute();    }    public class GetDocumentList extends AsyncTask<Void, Void, AllUser> {        private ProgressDialog dialog;        @Override        protected void onPreExecute() {            super.onPreExecute();            dialog = new ProgressDialog(HomePageActivity.this);            dialog.setMessage("Loading..");            dialog.show();            dialog.setCancelable(false);        }        @Override        protected AllUser doInBackground(Void... voids) {            AllUser result = new AllUser();            result = new APICall().GetDocumentList();            return result;        }        @Override        protected void onPostExecute(AllUser AllUser) {            if (AllUser != null) {                AllRequests.clear();                AllRequests.addAll(AllUser.getData());                adapter.notifyDataSetChanged();            } else {                Toast.makeText(HomePageActivity.this, "No Documents.", Toast.LENGTH_SHORT).show();            }            super.onPostExecute(AllUser);            dialog.dismiss();        }    }    public class ListAdapter extends BaseAdapter {        private ViewHolder Holder;        @Override        public int getCount() {            return AllRequests.size();        }        @Override        public Object getItem(int position) {            return AllRequests.get(position);        }        @Override        public long getItemId(int position) {            return position;        }        @Override        public View getView(final int position, View convertView, ViewGroup parent) {            if (convertView == null) {                LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);                convertView = inflater.inflate(R.layout.layout_item_u_app, parent, false);                Holder = new ViewHolder();                Holder.name = (TextView) convertView.findViewById(R.id.tvName);                Holder.contact = (TextView) convertView.findViewById(R.id.tvContact);                Holder.title = (TextView) convertView.findViewById(R.id.tvTitle);                Holder.btnDonwload = (Button) convertView.findViewById(R.id.btnDownload);                convertView.setTag(Holder);            } else {                Holder = (ViewHolder) convertView.getTag();            }            Holder.name.setText(AllRequests.get(position).getName());            Holder.contact.setText(AllRequests.get(position).getMobile());            Holder.title.setText(AllRequests.get(position).getTitle());            Holder.btnDonwload.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    String url = APIResource.BASE_URL + AllRequests.get(position).getUpload_path().trim();                    Intent intent = new Intent(HomePageActivity.this, VerifyPINActivity.class);                    intent.putExtra("is_from", "download");                    intent.putExtra("url", url);                    startActivity(intent);                }            });            return convertView;        }    }    private static class ViewHolder {        TextView name, title, contact;        ImageView imgDelete;        Button btnDonwload;    }}